{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list-component.jsx","components/search-field/search-field.component.jsx","App.js","config.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","CardList","monsters","map","key","Search","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","state","axios","then","res","data","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qWAWeA,G,YARF,SAACC,GACZ,OACI,yBAAKC,UAAU,kBACX,yBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAKL,EAAMG,QAAQG,OACtF,4BAAKN,EAAMG,QAAQG,SCGVC,EAPE,SAACP,GAAD,OACf,yBAAKC,UAAU,aACZD,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OACzB,kBAAC,EAAD,CAAMO,IAAKP,EAAQC,GAAID,QAASA,SCSvBQ,G,YAVA,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAC5B,OACE,2BAAOZ,UAAU,SACfa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkDDG,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAf5C,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,gEAUO,IAAD,OAClBI,ICzBmB,8CDyBJC,MAAK,SAACC,GAAS,IACpBC,EAASD,EAATC,KACR,EAAKR,SAAS,CAAEV,SAAUkB,S,+BASpB,IAAD,EAC2BC,KAAKL,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YAEZS,EAAmBpB,EAASqB,QAAO,SAAC1B,GAAD,OACvCA,EAAQG,KAAKwB,cAAcC,SAASZ,EAAYW,kBAGlD,OACE,yBAAK7B,UAAU,OACb,4CAEA,kBAAC,EAAD,CACEW,YAAY,sBACZC,aAAcc,KAAKd,eAGrB,yBAAKZ,UAAU,aACb,kBAAC,EAAD,CAAUO,SAAUoB,U,GAxCZI,aERlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.bfcdf8ce.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.scss'\n\nconst Card = (props) => {\n  return (\n      <div className=\"card-container\">\n          <img src={`https://robohash.org/${props.monster.id}?set=set4`} alt={props.monster.name}/>\n      <h2>{props.monster.name}</h2>\n    </div>\n  )\n}\nexport default Card;\n","import React from 'react';\nimport Card from '../card/card-component';\n\nconst CardList = (props) => (\n  <div className=\"card-list\">\n    {props.monsters.map(monster => (\n      <Card key={monster.id} monster={monster} />\n    ))}\n  </div>\n)\nexport default CardList;\n","import React from 'react';\nimport \"./search-field-styles.scss\"\n\n//functional components does not have access to state and lifecycle methods.\n//it's just a componenet which get some props and return some html.\nconst Search = ({placeholder, handleChange}) => {\n  return (\n    <input className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Search;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './app.scss';\nimport { baseURL } from './config';\n\n//cardlist component.\nimport CardList from './components/card-list/card-list-component';\nimport './components/card-list/card-list.styles.scss';\n\n//search-field component\nimport Search from './components/search-field/search-field.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n\n  //live cycle methods.\n  componentDidMount() {\n    axios(baseURL).then((res) => {\n      const { data } = res;\n      this.setState({ monsters: data });\n    });\n  }\n\n  handleChange = (event) => {\n      this.setState({ searchField: event.target.value })\n  }\n\n  //render method\n  render() {\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Cats Relodex</h1>\n        {/* search box component */}\n        <Search\n          placeholder=\"Filter Cats by Name\"\n          handleChange={this.handleChange}\n        />\n\n        <div className=\"card-list\">\n          <CardList monsters={filteredMonsters} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export const baseURL = 'https://jsonplaceholder.typicode.com/users';\nexport const language = 'Portuguese';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}